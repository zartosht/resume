name: Manual Trigger Workflow

on:
  workflow_dispatch:
    inputs:
      public_api_token:
        description: 'Configure8 Public API Token'
        required: true
      service_name:
        description: 'Service name'
        required: true
      service_data:
        description: 'Service extra info'
        default: ''
      # service_description:
      #   description: 'Service description'
      #   required: false
      # service_repository:
      #   description: 'Service repository'
      #   required: false
      # service_application:
      #   description: 'Service application'
      #   required: false
      # service_link_title:
      #   description: 'Service link title'
      #   required: false
      # service_link_type:
      #   description: 'Service link type'
      #   required: false
      # service_link_url:
      #   description: 'Service link URL'
      #   required: false
      # service_environments:
      #   description: 'Service environments'
      #   required: false
      # service_owners:
      #   description: 'Service owners'
      #   required: false
      # service_viewers:
      #   description: 'Service viewers'
      #   required: false
      # service_visibility:
      #   description: 'Service visibility'
      #   required: false
      # service_automap_name:
      #   description: 'Service automap name'
      #   required: false
      # service_automap_value:
      #   description: 'Service automap value'
      #   required: false
      # c8_report_token:
      #   description: 'Configure8 report token'
      #   required: true

jobs:
  service_with_same_name_exists:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Print parameters
      run: |
        echo "Token: ${{ github.event.inputs.c8_report_token }}"
        echo "Service name: ${{ github.event.inputs.service_name }}"

    - name: Set start at
      id: set_started_at
      run: |
        echo "::set-output name=startedAt::${{node -e 'console.log(new Date().toISOString())'}}"

    - name: Set default status
      id: status
      run: |
        echo "::set-output name=status::complete"

    - name: Use NodeJS
      uses: actions/setup-node@v2


    - name: Is Service with the same name exists
      id: service_exists
      run: |
        apiKey="${{ github.event.inputs.c8_report_token }}"
        serviceName="${{ github.event.inputs.service_name }}"
      
        response=$(curl -X POST -H "api-key: $apiKey" \
          -H "Accept: application/json" \
          -d '{
            "searchTerms": "'"$serviceName"'"
          }' \
        "https://b994-78-186-0-29.ngrok-free.app/public/v1/catalog/entities")

        serviceId=$(echo "$response" | jq '.items[] | select(.name == "$serviceName") | .id')

        if [[ -n "$serviceId" ]]; then
          echo "::set-output name=service-id::$serviceId"
        else
          echo "::set-output name=service-id::null"
        fi
